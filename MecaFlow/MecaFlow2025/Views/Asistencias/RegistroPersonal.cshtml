@using MecaFlow2025.Models
@model Asistencia

@{
    ViewData["Title"] = "Registro de Asistencia Personal";
    var asistenciaAbierta = (Asistencia)ViewBag.AsistenciaAbierta;
    var empleadoNombre = (string)ViewBag.EmpleadoNombre;
}

<style>
    body {
        background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
        color: #f8f9fa;
    }

    .card {
        background-color: #1f1f1f;
        border: 1px solid #2c2c2c;
        color: white;
        border-radius: 1rem;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

    .form-container {
        max-width: 600px;
        margin: 4rem auto;
    }
</style>

<div class="container form-container">
    <div class="card p-4">
        <div class="card-body text-center">
            <h1 class="card-title mb-4">Registro de Asistencia</h1>
            <h5 class="mb-4">Bienvenido, @empleadoNombre</h5>

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle"></i> @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-triangle"></i> @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (asistenciaAbierta == null)
            {
                <p>No tienes una asistencia registrada para el día de hoy. Puedes registrar tu entrada.</p>
                <form asp-action="RegistrarEntrada" method="post" class="d-grid gap-2">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-sign-in-alt"></i> Registrar Entrada
                    </button>
                </form>
            }
            else
            {
                <p>Ya has registrado tu entrada hoy a las @asistenciaAbierta.HoraEntrada. Puedes registrar tu salida.</p>
                <form asp-action="RegistrarSalida" method="post" class="d-grid gap-2">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger btn-lg">
                        <i class="fas fa-sign-out-alt"></i> Registrar Salida
                    </button>
                </form>
            }

            <hr />
            <a asp-action="Index" class="btn btn-secondary mt-3">
                <i class="fas fa-arrow-left"></i> Volver a la Lista
            </a>
        </div>
    </div>
</div>

<script>
    // Spinner y bloqueo al enviar (para feedback inmediato, sin notificaciones)
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('form[data-show-loading="true"]').forEach(form => {
            form.addEventListener('submit', function () {
                const btn = this.querySelector('button[type="submit"]');
                if (btn) {
                    btn.disabled = true;
                    btn.dataset.original = btn.innerHTML;
                    btn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Registrando...';
                }
            });
        });
    });
</script>