@model IEnumerable<MecaFlow2025.Controllers.ReportesFinancierosController.ResumenVM>

@{
    string alcance = ViewBag.Scope ?? "day";                    // "day" | "month" | "year"
    string tituloEsp = ViewBag.TituloScope ?? alcance.ToUpper(); // DÍA | MES | AÑO
    bool esDiario = alcance == "day";
    ViewData["Title"] = $"Reportes Financieros — {tituloEsp}";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    body {
        background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
        color: #f8f9fa;
    }

    .kpi-card {
        border-radius: 1rem;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .kpi-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

    .card-title, .card-text {
        color: white;
    }

    .btn {
        border-radius: 0.75rem;
    }

    .fade-in {
        animation: fadeIn 0.8s ease-in-out forwards;
        opacity: 0;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .table thead th {
        color: #f8f9fa;
    }

    /* === Fix fuerte para modal oscuro === */
    #modalReporte .modal-content {
        background-color: #111827 !important; /* gris oscuro */
        color: #e5e7eb !important;
    }

    #modalReporte .modal-header {
        background-color: #0d6efd !important;
        color: #ffffff !important;
    }

    #modalReporte .btn-close {
        filter: invert(1);
    }

    #modalReporte label,
    #modalReporte .form-label,
    #modalReporte h2,
    #modalReporte h5,
    #modalReporte .modal-title,
    #modalReporte strong {
        color: #e5e7eb !important;
    }

    #modalReporte .form-control,
    #modalReporte textarea,
    #modalReporte input[type="date"],
    #modalReporte input[type="number"] {
        background-color: #0b1220 !important;
        color: #e5e7eb !important;
        border-color: #334155 !important;
    }

        #modalReporte .form-control::placeholder,
        #modalReporte textarea::placeholder {
            color: #94a3b8 !important;
        }

    /* === Parche Details en modal oscuro === */
    #modalReporte .card {
        background-color: #0b1220 !important;
        color: #e5e7eb !important;
        border: 1px solid #334155 !important;
    }

        #modalReporte .card .card-body {
            background-color: transparent !important;
        }

    #modalReporte dt {
        color: #cbd5e1 !important; /* etiquetas */
        font-weight: 600 !important;
    }

    #modalReporte dd {
        color: #f1f5f9 !important; /* valores */
    }

    #modalReporte .text-success {
        color: #22c55e !important;
    }

    #modalReporte .text-danger {
        color: #ef4444 !important;
    }

    #modalReporte .btn-secondary {
        color: #e5e7eb !important;
    }

</style>

<div class="container mt-5 fade-in">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">
            <i class="bi bi-cash-coin text-warning"></i> Reportes Financieros — @tituloEsp
        </h2>

        <div class="d-flex align-items-center">
            <!-- Selector de alcance -->
            <div class="btn-group me-2">
                <a asp-action="Index" asp-route-scope="day"
                   class="btn btn-outline-info @(alcance == "day" ? "active" : "")">Diario</a>
                <a asp-action="Index" asp-route-scope="month"
                   class="btn btn-outline-info @(alcance == "month" ? "active" : "")">Mensual</a>
                <a asp-action="Index" asp-route-scope="year"
                   class="btn btn-outline-info @(alcance == "year" ? "active" : "")">Anual</a>
            </div>

            <!-- Export / Nuevo -->
            <a asp-controller="ReportesFinancieros" asp-action="ExportToExcel" asp-route-scope="@alcance" class="btn btn-outline-success me-2">
                <i class="bi bi-file-earmark-excel"></i> Excel
            </a>
            <a asp-controller="ReportesFinancieros" asp-action="ExportToPdf" asp-route-scope="@alcance" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-earmark-pdf"></i> PDF
            </a>
            <a href="javascript:void(0)" class="btn btn-success"
               onclick="openModal('@Url.Action("Create","ReportesFinancieros")')">
                <i class="bi bi-plus-circle-fill"></i> Nuevo Reporte
            </a>
        </div>
    </div>

    <!-- KPIs -->
    @{
        var totalReportes = Model?.Count() ?? 0;
        var totalIngresos = Model?.Sum(x => x.TotalIngresos) ?? 0m;
        var totalGastos = Model?.Sum(x => x.TotalGastos) ?? 0m;
        var totalUtilidad = Model?.Sum(x => x.Utilidad) ?? 0m;

        // "Último período" por ordenamiento del label. Si tus labels son yyyy-MM-dd / yyyy-MM / yyyy, queda ok.
        var ultimoPeriodo = Model?.OrderByDescending(x => x.Periodo)?.FirstOrDefault()?.Periodo ?? "-";
    }

    <div class="row text-white mb-4">
        <div class="col-md-3">
            <div class="card bg-primary shadow kpi-card text-center p-3">
                <h5>Total Reportes</h5>
                <h3 class="fw-bold">@totalReportes</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success shadow kpi-card text-center p-3">
                <h5>Ingresos Totales</h5>
                <h3 class="fw-bold">₡ @totalIngresos.ToString("N2")</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning shadow kpi-card text-center p-3">
                <h5>Gastos Totales</h5>
                <h3 class="fw-bold">₡ @totalGastos.ToString("N2")</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-dark shadow kpi-card text-center p-3">
                <h5>Utilidad Acumulada</h5>
                <h3 class="fw-bold @(totalUtilidad >= 0 ? "text-success" : "text-danger")">₡ @totalUtilidad.ToString("N2")</h3>
            </div>
        </div>
    </div>

    <!-- (Opcional) Buscador simple por período o concepto -->
    <form method="get" asp-action="Index" class="input-group mb-4">
        <input type="hidden" name="scope" value="@alcance" />
        <input type="text" name="search" value="@ViewBag.Search" class="form-control" placeholder="Buscar por período o concepto...">
        <button class="btn btn-outline-light" type="submit">
            <i class="bi bi-search"></i>
        </button>
    </form>

    <!-- Chart -->
    <div class="card mb-4 shadow-sm fade-in">
        <div class="card-body bg-dark rounded">
            <canvas id="finChart" height="100"></canvas>
        </div>
    </div>

    <!-- Tabla -->
    <table class="table table-dark table-striped table-hover text-center align-middle shadow fade-in">
        <thead class="bg-gradient">
            <tr>
                <th>Fecha / Período</th>
                <th class="text-end">Ingresos&nbsp;₡</th>
                <th class="text-end">Gastos&nbsp;₡</th>
                <th class="text-end">Utilidad&nbsp;₡</th>
                @if (esDiario)
                {
                    <th>Acciones</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var r in Model)
            {
                <tr class="@(r.Utilidad >= 0 ? "" : "table-danger")">
                    <td>@r.Periodo</td>
                    <td class="text-end">@r.TotalIngresos.ToString("N2")</td>
                    <td class="text-end">@r.TotalGastos.ToString("N2")</td>
                    <td class="text-end fw-bold">@r.Utilidad.ToString("N2")</td>
                    @if (esDiario)
                    {
                        <td>
                            <a href="javascript:void(0)" class="btn btn-sm btn-info me-1"
                               onclick="openModal('@Url.Action("Details","ReportesFinancieros", new { id = r.ReporteId })')">
                                <i class="bi bi-eye"></i>
                            </a>
                            <a href="javascript:void(0)" class="btn btn-sm btn-warning me-1"
                               onclick="openModal('@Url.Action("Edit","ReportesFinancieros", new { id = r.ReporteId })')">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <a href="javascript:void(0)" class="btn btn-sm btn-danger"
                               onclick="openModal('@Url.Action("Delete","ReportesFinancieros", new { id = r.ReporteId })')">
                                <i class="bi bi-trash"></i>
                            </a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal centrado -->
<div class="modal fade" id="modalReporte" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Gestión de Reporte</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <div class="text-center text-muted">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    (function () {
      const modalEl = document.getElementById('modalReporte');
      const bodyEl  = document.getElementById('modalContent');

      // 1) Delegación de eventos: captura cualquier submit de forms dentro del modal
      bodyEl.addEventListener('submit', async function (e) {
        const form = e.target;
        if (!(form instanceof HTMLFormElement)) return;
        e.preventDefault();

        try {
          const fd = new FormData(form);
          const resp = await fetch(form.action, {
            method: form.method || 'POST',
            body: fd,
            headers: { 'X-Requested-With': 'XMLHttpRequest' },
            credentials: 'same-origin' // <-- IMPRESCINDIBLE para que viaje la cookie AntiForgery
          });

          if (resp.status === 204) {
            // Guardó bien
            const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
            modal.hide();
            location.reload();
            return;
          }

          if (resp.ok) {
            // Validaciones: el server devuelve la parcial con errores -> la volvemos a pintar
            bodyEl.innerHTML = await resp.text();
            return;
          }

          bodyEl.innerHTML =
            `<div class="alert alert-danger">Error ${resp.status} ${resp.statusText}. Revisa Network.</div>`;
        } catch (err) {
          console.error(err);
          bodyEl.innerHTML =
            `<div class="alert alert-danger">Ocurrió un error al guardar. Revisa la consola.</div>`;
        }
      });

      // 2) Abrir modal y cargar parcial
      window.openModal = function (url) {
        bodyEl.innerHTML =
          '<div class="text-center p-3"><div class="spinner-border text-primary" role="status"></div></div>';

        const modal = bootstrap.Modal.getOrCreateInstance(modalEl);

        fetch(url, {
          headers: { 'X-Requested-With': 'XMLHttpRequest' },
          credentials: 'same-origin' // <-- también aquí por si hay auth
        })
        .then(r => { if (!r.ok) throw new Error(`HTTP ${r.status} ${r.statusText}`); return r.text(); })
        .then(html => { bodyEl.innerHTML = html; modal.show(); })
        .catch(err => {
          console.error(err);
          bodyEl.innerHTML =
            `<div class="alert alert-danger">No se pudo cargar el contenido (${err.message}).</div>`;
          modal.show();
        });
      };
    })();
</script>

