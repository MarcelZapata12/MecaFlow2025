@model IEnumerable<MecaFlow2025.Controllers.ReportesFinancierosController.ResumenVM>
@using System.Text.Json

@{
    string alcance = ViewBag.Scope ?? "day";                    // "day" | "month" | "year"
    string tituloEsp = ViewBag.TituloScope ?? alcance.ToUpper(); // DÍA | MES | AÑO
    bool esDiario = alcance == "day";
    ViewData["Title"] = $"Reportes Financieros — {tituloEsp}";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    body {
        /* background: linear-gradient(135deg, #0f2027, #203a43, #2c5364); */
        color: #f8f9fa;
    }

    .kpi-card {
        border-radius: 1rem;
        transition: transform .3s, box-shadow .3s;
    }

        .kpi-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,.3);
        }

    .card-title, .card-text {
        color: #fff;
    }

    .btn {
        border-radius: .75rem;
    }

    .fade-in {
        animation: fadeIn .8s ease-in-out forwards;
        opacity: 0;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: none;
        }
    }

    .table thead th {
        color: #f8f9fa;
    }
    #modalReporte .modal-content {
        background: #111827 !important;
        color: #e5e7eb !important
    }

    #modalReporte .modal-header {
        background: #0d6efd !important;
        color: #fff !important
    }

    #modalReporte .btn-close {
        filter: invert(1)
    }

    #modalReporte label, #modalReporte .form-label, #modalReporte h2, #modalReporte h5, #modalReporte .modal-title, #modalReporte strong {
        color: #e5e7eb !important
    }

    #modalReporte .form-control, #modalReporte textarea, #modalReporte input[type="date"], #modalReporte input[type="number"] {
        background: #0b1220 !important;
        color: #e5e7eb !important;
        border-color: #334155 !important
    }

        #modalReporte .form-control::placeholder, #modalReporte textarea::placeholder {
            color: #94a3b8 !important
        }

    #modalReporte .card {
        background: #0b1220 !important;
        color: #e5e7eb !important;
        border: 1px solid #334155 !important
    }

        #modalReporte .card .card-body {
            background: transparent !important
        }

    #modalReporte dt {
        color: #cbd5e1 !important;
        font-weight: 600 !important
    }

    #modalReporte dd {
        color: #f1f5f9 !important
    }

    #modalReporte .text-success {
        color: #22c55e !important
    }

    #modalReporte .text-danger {
        color: #ef4444 !important
    }

    #modalReporte .btn-secondary {
        color: #e5e7eb !important
    }

    .modal-content.dark-theme {
        background-color: #1f1f1f;
        color: white;
    }
</style>

<div class="container mt-5 fade-in">
    @if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@err
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["Success"] is string ok && !string.IsNullOrWhiteSpace(ok))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@ok
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">
            <i class="bi bi-cash-coin text-warning"></i> Reportes Financieros — @tituloEsp
        </h2>

        <div class="d-flex align-items-center">
            <div class="btn-group me-2">
                <a asp-action="Index" asp-route-scope="day"
                   class="btn btn-outline-info @(alcance == "day" ? "active" : "")">Diario</a>
                <a asp-action="Index" asp-route-scope="month"
                   class="btn btn-outline-info @(alcance == "month" ? "active" : "")">Mensual</a>
                <a asp-action="Index" asp-route-scope="year"
                   class="btn btn-outline-info @(alcance == "year" ? "active" : "")">Anual</a>
            </div>

            <a asp-controller="ReportesFinancieros" asp-action="ExportToExcel" asp-route-scope="@alcance" class="btn btn-outline-success me-2">
                <i class="bi bi-file-earmark-excel"></i> Excel
            </a>
            <a asp-controller="ReportesFinancieros" asp-action="ExportToPdf" asp-route-scope="@alcance" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-earmark-pdf"></i> PDF
            </a>
            <a href="javascript:void(0)" class="btn btn-success"
               onclick="openModal('@Url.Action("Create", "ReportesFinancieros")')">
                <i class="bi bi-plus-circle-fill"></i> Nuevo Reporte
            </a>
        </div>
    </div>

    @* KPIs *@
    @{
        var totalReportes = Model?.Count() ?? 0;
        var totalIngresos = Model?.Sum(x => x.TotalIngresos) ?? 0m;
        var totalGastos = Model?.Sum(x => x.TotalGastos) ?? 0m;
        var totalUtilidad = Model?.Sum(x => x.Utilidad) ?? 0m;
        var ultimoPeriodo = Model?.OrderByDescending(x => x.Periodo)?.FirstOrDefault()?.Periodo ?? "-";
    }

    <div class="row text-white mb-4">
        <div class="col-md-3">
            <div class="card bg-primary shadow kpi-card text-center p-3">
                <h5>Total Reportes</h5>
                <h3 class="fw-bold">@totalReportes</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success shadow kpi-card text-center p-3">
                <h5>Ingresos Totales</h5>
                <h3 class="fw-bold">₡ @totalIngresos.ToString("N2")</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning shadow kpi-card text-center p-3">
                <h5>Gastos Totales</h5>
                <h3 class="fw-bold">₡ @totalGastos.ToString("N2")</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-dark shadow kpi-card text-center p-3">
                <h5>Utilidad Acumulada</h5>
                <h3 class="fw-bold @(totalUtilidad >= 0 ? "text-success" : "text-danger")">₡ @totalUtilidad.ToString("N2")</h3>
            </div>
        </div>
    </div>

    <form method="get" asp-action="Index" class="input-group mb-4">
        <input type="hidden" name="scope" value="@alcance" />
        <input type="text" name="search" value="@ViewBag.Search" class="form-control" placeholder="Buscar por período o concepto...">
        <button class="btn btn-outline-light" type="submit">
            <i class="bi bi-search"></i>
        </button>
    </form>

    <div class="card mb-4 shadow-sm fade-in">
        <div class="card-body bg-dark rounded" style="height: 360px;">
            <canvas id="finChart"></canvas>
        </div>
    </div>

    <table class="table table-dark table-striped table-hover text-center align-middle shadow fade-in">
        <thead class="bg-gradient">
            <tr>
                <th>Fecha / Período</th>
                <th class="text-end">Ingresos&nbsp;₡</th>
                <th class="text-end">Gastos&nbsp;₡</th>
                <th class="text-end">Utilidad&nbsp;₡</th>
                @if (esDiario)
                {
                    <th>Acciones</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var r in Model)
            {
                <tr class="@(r.Utilidad >= 0 ? "" : "table-danger")">
                    <td>@r.Periodo</td>
                    <td class="text-end">@r.TotalIngresos.ToString("N2")</td>
                    <td class="text-end">@r.TotalGastos.ToString("N2")</td>
                    <td class="text-end fw-bold">@r.Utilidad.ToString("N2")</td>
                    @if (esDiario)
                    {
                        <td>
                            <a href="javascript:void(0)" class="btn btn-sm btn-info me-1"
                               onclick="openModal('@Url.Action("Details", "ReportesFinancieros", new { id = r.ReporteId })')">
                                <i class="bi bi-eye"></i>
                            </a>
                            <a href="javascript:void(0)" class="btn btn-sm btn-warning me-1"
                               onclick="openModal('@Url.Action("Edit", "ReportesFinancieros", new { id = r.ReporteId })')">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <a href="javascript:void(0)" class="btn btn-sm btn-danger"
                               onclick="confirmReporteDelete(@r.ReporteId)">
                                <i class="bi bi-trash"></i>
                            </a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="modalReporte" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Gestión de Reporte</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <div class="text-center text-muted">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="reporteDelete" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content dark-theme">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>¿Está seguro de que desea eliminar este reporte?</p>
                <form id="reporteDeleteForm" method="post" action="">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="reporteDeleteId" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" onclick="submitReporteDelete()">Eliminar</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // ====== GRAFICO ======
    document.addEventListener('DOMContentLoaded', () => {
      const canvas = document.getElementById('finChart');
      if (!canvas) return;

      // Datos desde el servidor (JSON plano, números crudos)
      const labels   = @Html.Raw(JsonSerializer.Serialize(Model.Select(x => x.Periodo).ToList()));
      const ingresos = @Html.Raw(JsonSerializer.Serialize(Model.Select(x => x.TotalIngresos).ToList()));
      const gastos   = @Html.Raw(JsonSerializer.Serialize(Model.Select(x => x.TotalGastos).ToList()));
      const utilidad = @Html.Raw(JsonSerializer.Serialize(Model.Select(x => x.Utilidad).ToList()));
      if (!labels || labels.length === 0) {
        // Si no hay datos, mostramos un placeholder
        canvas.parentElement.innerHTML = '<div class="text-center text-secondary py-4">Sin datos para graficar.</div>';
        return;
      }

      const fmtCRC = (v) =>
        new Intl.NumberFormat('es-CR', { style: 'currency', currency: 'CRC', maximumFractionDigits: 2 }).format(Number(v||0));
      new Chart(canvas, {
        data: {
          labels,
              datasets: [
      { type: 'bar',  label: 'Ingresos', data: ingresos, backgroundColor: 'rgba(25,135,84,.7)' },
      { type: 'bar',  label: 'Gastos',   data: gastos,   backgroundColor: 'rgba(255,193,7,.8)' },
      {
        type: 'line',
        label: 'Utilidad',
        data: utilidad,
        borderColor: '#0d6efd',
        backgroundColor: 'rgba(13,110,253,.15)',
        pointBackgroundColor: '#0d6efd',
        pointBorderColor: '#0d6efd',
        borderWidth: 2,
        tension: 0.35,
        fill: false
      }
    ]

        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            x: { ticks: { color: '#e5e7eb' }, grid: { color: 'rgba(255,255,255,.08)' } },
            y: {
              beginAtZero: true,
              ticks: {
                color: '#e5e7eb',
                callback: (val) => fmtCRC(val)
              },
              grid: { color: 'rgba(255,255,255,.08)' }
            }
          },
          plugins: {
            legend: { labels: { color: '#e5e7eb' } },
            tooltip: {
              callbacks: {
                label: (ctx) => `${ctx.dataset.label}: ${fmtCRC(ctx.raw)}`
              }
            }
          }
        }
      });
    });

    // ====== MODAL (tu lógica) ======
    (function () {
      const modalEl = document.getElementById('modalReporte');
      const bodyEl  = document.getElementById('modalContent');

      bodyEl.addEventListener('submit', async function (e) {
        const form = e.target;
        if (!(form instanceof HTMLFormElement)) return;
        e.preventDefault();

        try {
          const fd = new FormData(form);
          const resp = await fetch(form.action, {
            method: form.method || 'POST',
            body: fd,
            headers: { 'X-Requested-With': 'XMLHttpRequest' },
            credentials: 'same-origin'
          });

          if (resp.status === 204) {
            bootstrap.Modal.getOrCreateInstance(modalEl).hide();
            location.reload();
            return;
          }
          if (resp.ok) {
            bodyEl.innerHTML = await resp.text();
            return;
          }
          bodyEl.innerHTML = `<div class="alert alert-danger">Error ${resp.status} ${resp.statusText}</div>`;
        } catch (err) {
          console.error(err);
          bodyEl.innerHTML = `<div class="alert alert-danger">Ocurrió un error al guardar.</div>`;
        }
      });
      window.openModal = function (url) {
        bodyEl.innerHTML = '<div class="text-center p-3"><div class="spinner-border text-primary" role="status"></div></div>';
        const modal = bootstrap.Modal.getOrCreateInstance(modalEl);

        fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' }, credentials: 'same-origin' })
          .then(r => { if (!r.ok) throw new Error(`HTTP ${r.status} ${r.statusText}`); return r.text(); })
          .then(html => { bodyEl.innerHTML = html; modal.show(); })
          .catch(err => {
            console.error(err);
            bodyEl.innerHTML = `<div class="alert alert-danger">No se pudo cargar el contenido (${err.message}).</div>`;
            modal.show();
          });
      };
    })();

    // ====== NUEVAS FUNCIONES DE ELIMINACION ======
    function confirmReporteDelete(id) {
        const modal = new bootstrap.Modal(document.getElementById('reporteDelete'));
        document.getElementById('reporteDeleteId').value = id;
        document.getElementById('reporteDeleteForm').action = `/ReportesFinancieros/Delete/${id}`;
        modal.show();
    }

    function submitReporteDelete() {
        document.getElementById('reporteDeleteForm').submit();
    }
</script>