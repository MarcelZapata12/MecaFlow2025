@model MecaFlow2025.Models.ReportesFinanciero
@{
    ViewBag.Title = "Editar Reporte";
    Layout = null;
}

<h2 class="mb-3">@ViewBag.Title</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul class="mb-0">
            @foreach (var err in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@err.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form id="formEditReporte" asp-action="Edit" method="post" class="row g-3" autocomplete="off">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" value="@Model.ReporteId" />

    <div class="col-md-4">
        <label class="form-label" for="FechaString">Fecha</label>
        <input id="FechaString" name="FechaString" type="date"
               value="@Model.Fecha.ToString("yyyy-MM-dd")"
               class="form-control" required
               placeholder="dd/mm/aaaa" />
    </div>

    <div class="col-md-4">
        <label class="form-label" for="TotalIngresos">Total Ingresos</label>
        <input id="TotalIngresos" name="TotalIngresos" type="number"
               step="0.01" class="form-control"
               value="@(Model.TotalIngresos?.ToString(System.Globalization.CultureInfo.InvariantCulture))"
               placeholder="0.00" />
    </div>

    <div class="col-md-4">
        <label class="form-label" for="TotalGastos">Total Gastos</label>
        <input id="TotalGastos" name="TotalGastos" type="number"
               step="0.01" class="form-control"
               value="@(Model.TotalGastos?.ToString(System.Globalization.CultureInfo.InvariantCulture))"
               placeholder="0.00" />
    </div>

    <div class="col-12">
        <label class="form-label" for="Observaciones">Observaciones</label>
        <textarea id="Observaciones" name="Observaciones"
                  class="form-control" rows="4"
                  placeholder="Notas, comentarios, etc.">@Model.Observaciones</textarea>
    </div>

    <!-- Barra de acciones sticky al fondo del modal -->
    <div class="col-12">
        <div class="position-sticky bottom-0 pt-3 mt-2 d-flex justify-content-between align-items-center"
             style="background: transparent;">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                Cancelar
            </button>
            <button type="submit" class="btn btn-primary">
                Guardar cambios
            </button>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Enviar por AJAX para que el 204 cierre el modal sin recargar toda la página
        (function () {
          const form = document.getElementById('formEditReporte');
          if (!form) return;

          form.addEventListener('submit', async function (e) {
            e.preventDefault();

            const modalEl = document.getElementById('modalReporte');
            const bodyEl  = document.getElementById('modalContent');
            if (!modalEl || !bodyEl) {
              // Si no existe el modal en el DOM, hace submit normal
              form.submit();
              return;
            }

            const fd = new FormData(form);

            try {
              const resp = await fetch(form.action, {
                method: 'POST',
                body: fd,
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
              });

              if (resp.status === 204) {
                // OK: cerrar modal y recargar la tabla/página
                const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                modal.hide();
                location.reload();
                return;
              }

              if (resp.ok) {
                // Validaciones servidor: re-render de la parcial
                bodyEl.innerHTML = await resp.text();
                return;
              }

              // Error HTTP
              bodyEl.innerHTML =
                `<div class="alert alert-danger">Error ${resp.status} ${resp.statusText}</div>`;
            } catch (err) {
              console.error(err);
              bodyEl.innerHTML =
                `<div class="alert alert-danger">Ocurrió un error al guardar. Revisa la consola.</div>`;
            }
          });
        })();
    </script>
}
