@model IEnumerable<MecaFlow2025.Models.Diagnostico>
@{
    ViewData["Title"] = "Diagnósticos";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    body {
        background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
        color: #f8f9fa;
    }

    .kpi-card {
        border-radius: 1rem;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .kpi-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    }

    .card-title, .card-text {
        color: white;
    }

    .btn {
        border-radius: 0.75rem;
    }

    .fade-in {
        animation: fadeIn 0.8s ease-in-out forwards;
        opacity: 0;
    }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .table thead th {
        color: #f8f9fa;
    }
</style>

<div class="container mt-5 fade-in">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">
            <i class="bi bi-clipboard-heart-fill text-danger"></i> Diagnósticos
        </h2>
        <div>
            <a asp-action="ExportToExcel" class="btn btn-outline-success me-2">
                <i class="bi bi-file-earmark-excel"></i> Excel
            </a>
            <a asp-action="ExportToPdf" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-earmark-pdf"></i> PDF
            </a>
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-circle-fill"></i> Nuevo Diagnóstico
            </a>
        </div>
    </div>

    <div class="row text-white mb-4">
        <div class="col-md-3">
            <div class="card bg-primary shadow kpi-card text-center p-3">
                <h5>Total Diagnósticos</h5>
                <h3 class="fw-bold">@Model.Count()</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success shadow kpi-card text-center p-3">
                <h5>Última Fecha</h5>
                <h3 class="fw-bold">
                    @Model.OrderByDescending(d => d.Fecha).FirstOrDefault()?.Fecha.ToString("yyyy-MM-dd")
                </h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning shadow kpi-card text-center p-3">
                <h5>Por Empleado</h5>
                <h3 class="fw-bold">@Model.Select(d => d.Empleado?.Nombre).Distinct().Count()</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-dark shadow kpi-card text-center p-3">
                <h5>Hoy</h5>
                <h3 class="fw-bold">@Model.Count(d => d.Fecha.Date == DateTime.Today)</h3>
            </div>
        </div>
    </div>

    <form method="get" asp-action="Index" class="input-group mb-4">
        <input type="text" name="search" value="@ViewBag.Search" class="form-control" placeholder="Buscar por placa, detalle o empleado...">
        <button class="btn btn-outline-light" type="submit">
            <i class="bi bi-search"></i>
        </button>
    </form>

    <div class="card mb-4 shadow-sm fade-in">
        <div class="card-body bg-dark rounded">
            <canvas id="diagnosticosChart" height="100"></canvas>
        </div>
    </div>

    <table class="table table-dark table-striped table-hover text-center align-middle shadow fade-in">
        <thead class="bg-gradient">
            <tr>
                <th>#</th>
                <th>Vehículo</th>
                <th>Fecha</th>
                <th>Detalle</th>
                <th>Empleado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var d in Model)
            {
                <tr class="@(d.Fecha.Date == DateTime.Today ? "table-success" : "")">
                    <td>@d.DiagnosticoId</td>
                    <td>@d.Vehiculo.Placa</td>
                    <td>@d.Fecha.ToString("yyyy-MM-dd")</td>
                    <td>@d.Detalle</td>
                    <td>@d.Empleado?.Nombre</td>
                    <td>
                        <a href="javascript:void(0)" class="btn btn-sm btn-warning"
                           onclick="openModal('@Url.Action("Edit", "Diagnosticos", new { id = d.DiagnosticoId })')">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <a href="javascript:void(0)" class="btn btn-sm btn-danger"
                           onclick="openModal('@Url.Action("Delete", "Diagnosticos", new { id = d.DiagnosticoId })')">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal centrado -->
<div class="modal fade" id="modalDiagnostico" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Editar / Eliminar Diagnóstico</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <div class="text-center text-muted">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    @using System.Text.Json
    <script>
        function openModal(url) {
            const modal = new bootstrap.Modal(document.getElementById('modalDiagnostico'));
            document.getElementById('modalContent').innerHTML = '<div class="text-center p-3"><div class="spinner-border text-primary"></div></div>';
            fetch(url)
                .then(r => r.text())
                .then(html => {
                    document.getElementById('modalContent').innerHTML = html;
                    modal.show();
                });
        }

        document.addEventListener("DOMContentLoaded", function () {
            const ctx = document.getElementById('diagnosticosChart');
            if (!ctx) return;

            const labels = @Html.Raw(JsonSerializer.Serialize(
                Model.GroupBy(d => d.Fecha.Date).OrderBy(g => g.Key).Select(g => g.Key.ToString("yyyy-MM-dd"))
            ));
            const data = @Html.Raw(JsonSerializer.Serialize(
                Model.GroupBy(d => d.Fecha.Date).OrderBy(g => g.Key).Select(g => g.Count())
            ));

            if (labels.length === 0 || data.length === 0) return;

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Diagnósticos por Fecha',
                        data: data,
                        backgroundColor: 'rgba(54, 162, 235, 0.6)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
        });
    </script>
}
