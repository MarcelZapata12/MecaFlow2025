@model IEnumerable<MecaFlow2025.Models.TareasVehiculo>
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Tareas de Vehículo";
    var vehiculoSelect   = (SelectList)ViewData["VehiculoId"];
    var sectoresSelect   = (SelectList)ViewData["Sectores"];
    string q             = ViewData["Q"] as string;
    bool? realizadas     = ViewData["Realizadas"] as bool?;
    int? vehiculoIdFilter= ViewData["VehiculoIdFilter"] as int?;
    string sectorFilter  = ViewData["SectorFilter"] as string;
}

<h1 class="mb-3">Tareas de Vehículo</h1>

<form method="get" class="row g-2 mb-3">
    <div class="col-auto">
        <label class="form-label">Vehículo</label>
        <select name="vehiculoId" class="form-select" asp-items="vehiculoSelect">
            <option value="">— Todos —</option>
        </select>
    </div>

    <div class="col-auto">
        <label class="form-label">Estado</label>
        <select name="realizadas" class="form-select">
            <option value="">— Todos —</option>
            <option value="false" selected="@(realizadas == false)">Pendientes</option>
            <option value="true" selected="@(realizadas == true)">Realizadas</option>
        </select>
    </div>

    <div class="col-auto">
        <label class="form-label">Sector</label>
        <select name="sector" class="form-select" asp-items="sectoresSelect">
            <option value="">— Todos —</option>
        </select>
    </div>

    <div class="col-auto">
        <label class="form-label">Buscar</label>
        <input name="q" class="form-control" value="@q" placeholder="Descripción..." />
    </div>

    <div class="col-auto align-self-end">
        <button class="btn btn-primary">Filtrar</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Limpiar</a>
    </div>

    <div class="col-auto align-self-end ms-auto">
        <a asp-action="Create" asp-route-vehiculoId="@vehiculoIdFilter" class="btn btn-success">+ Nueva Tarea</a>
    </div>
</form>

<table class="table table-striped table-hover align-middle">
    <thead>
        <tr>
            <th>Id</th>
            <th>Placa</th>
            <th>Descripción</th>
            <th>Sector</th> <!-- NUEVO -->
            <th>Fecha registro</th>
            <th>Estado</th>
            <th class="text-end">Acciones</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.TareaId</td>
            <td>@item.Vehiculo?.Placa</td>
            <td>@item.Descripcion</td>
            <td>@(string.IsNullOrWhiteSpace(item.Sector) ? "-" : item.Sector)</td> <!-- NUEVO -->
                <td>@item.FechaRegistro?.ToString("dd/MM/yyyy")</td>

            <td>
                <form asp-action="ToggleRealizada" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@item.TareaId" />
                    <input type="hidden" name="vehiculoId" value="@vehiculoIdFilter" />
                    <input type="hidden" name="realizadas" value="@(realizadas?.ToString().ToLower())" />
                    <input type="hidden" name="q" value="@q" />
                    <input type="hidden" name="sector" value="@sectorFilter" /> <!-- preserva el filtro -->
                    <button type="submit" class="btn btn-sm @(item.Realizada ? "btn-success" : "btn-warning")">
                        @(item.Realizada ? "Realizada" : "Pendiente")
                    </button>
                </form>
            </td>
            <td class="text-end">
                <a asp-action="Details" asp-route-id="@item.TareaId" class="btn btn-sm btn-outline-info">Detalles</a>
                <a asp-action="Edit"    asp-route-id="@item.TareaId" class="btn btn-sm btn-outline-primary">Editar</a>
                <a asp-action="Delete"  asp-route-id="@item.TareaId" class="btn btn-sm btn-outline-danger">Eliminar</a>
            </td>
        </tr>
    }
    </tbody>
</table>
