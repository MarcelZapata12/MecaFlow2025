@model IEnumerable<MecaFlow2025.Models.TareasVehiculo>
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Tareas de Vehículo";
    var vehiculoSelect = (SelectList)ViewData["VehiculoId"];
    var sectoresSelect = (SelectList)ViewData["Sectores"];
    string q = ViewData["Q"] as string;
    bool? realizadas = ViewData["Realizadas"] as bool?;
    int? vehiculoIdFilter = ViewData["VehiculoIdFilter"] as int?;
    string sectorFilter = ViewData["SectorFilter"] as string;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<style>
    body {
        background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
        color: #f8f9fa;
        animation: gradient 15s ease infinite;
        background-size: 400% 400%;
    }

    @@keyframes gradient {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
            box-shadow: 0 0 0 0 rgba(13,110,253,.4);
        }

        70% {
            transform: scale(1.05);
            box-shadow: 0 0 0 10px rgba(13,110,253,0);
        }

        100% {
            transform: scale(1);
            box-shadow: 0 0 0 0 rgba(13,110,253,0);
        }
    }

    /* Tarjetas y grid (igual a Vehículos, renombrado) */
    .task-card {
        background-color: #1f1f1f;
        border: 1px solid #2c2c2c;
        color: white;
        border-radius: 1rem;
        transition: transform .3s ease, box-shadow .3s ease;
        margin-bottom: 1rem;
        position: relative;
        animation: fadeInUp .5s ease-in-out;
    }

        .task-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,.3);
        }

    .task-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1rem;
    }

    .form-control:focus, .form-select:focus {
        background-color: #2c2c2c;
        color: #fff;
        border-color: #66afe9;
        box-shadow: 0 0 0 .2rem rgba(102,175,233,.25);
    }

    .icon-btn {
        background: none;
        border: none;
        padding: 0;
        font-size: 1.25rem;
        color: inherit;
    }

    .action-icons {
        position: absolute;
        top: .75rem;
        right: 1rem;
        display: flex;
        gap: .75rem;
        z-index: 2;
    }

    .modal-content {
        background-color: #1f1f1f;
        color: white;
        animation: fadeIn .3s ease-in-out;
    }

    .btn-pulse {
        animation: pulse 2s infinite;
    }

    /* Badges de estado */
    .badge-pill {
        border-radius: 999px;
        padding: .35rem .6rem;
        font-weight: 600;
        border: 1px solid rgba(255,255,255,.08);
    }

    .badge-done {
        background: #13321c;
        color: #9be7b0;
    }

    .badge-pending {
        background: #3a300a;
        color: #ffd86b;
    }

    /* Filtros oscuros */
    .filters-card {
        background: #1b1b1b;
        border: 1px solid #2c2c2c;
        border-radius: .75rem;
        padding: .75rem 1rem;
    }

        .filters-card .form-label {
            color: #cfd8e3;
            font-weight: 600;
        }

        .filters-card .form-select, .filters-card .form-control {
            background: #232323;
            color: #e9ecef;
            border: 1px solid #3a3a3a;
        }

        .filters-card .btn {
            margin-right: .35rem;
        }
</style>

<div class="container py-4">
    <!-- Encabezado -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-white">
            <i class="bi bi-wrench-adjustable me-2"></i>Tareas de Vehículo
        </h2>
        <div class="d-flex align-items-center">
            <a href="#" class="btn btn-primary btn-pulse" onclick="loadTareaCreate()">
                <i class="bi bi-plus-circle me-1"></i>Nueva Tarea
            </a>
        </div>

        </div>
    </div>

    <!-- Filtros (server-side, conservados de tu vista) -->
    <form method="get" class="row g-2 mb-4 filters-card">
        <div class="col-12 col-md-3">
            <label class="form-label">Vehículo</label>
            <select name="vehiculoId" class="form-select" asp-items="vehiculoSelect">
                <option value="">— Todos —</option>
            </select>
        </div>
        <div class="col-6 col-md-2">
            <label class="form-label">Estado</label>
            <select name="realizadas" class="form-select">
                <option value="">— Todos —</option>
                <option value="false" selected="@(realizadas == false)">Pendientes</option>
                <option value="true" selected="@(realizadas == true)">Realizadas</option>
            </select>
        </div>
        <div class="col-6 col-md-3">
            <label class="form-label">Sector</label>
            <select name="sector" class="form-select" asp-items="sectoresSelect">
                <option value="">— Todos —</option>
            </select>
        </div>
        <div class="col-12 col-md-3">
            <label class="form-label">Buscar</label>
            <input name="q" class="form-control" value="@q" placeholder="Descripción..." />
        </div>
        <div class="col-12 col-md-1 d-flex align-items-end">
            <button class="btn btn-primary w-100"><i class="bi bi-funnel me-1"></i>Filtrar</button>
        </div>
        <div class="col-12 col-md-2 d-flex align-items-end">
            <a asp-action="Index" class="btn btn-outline-secondary w-100">
                <i class="bi bi-x-circle me-1"></i>Limpiar
            </a>
        </div>
    </form>

    <!-- Grid de tarjetas -->
    <div id="tareasGrid" class="task-grid">
        @foreach (var t in Model)
        {
            <div class="task-card card p-3">
                <div class="action-icons">
                    <a href="#" class="text-info icon-btn" title="Detalles" onclick="openTareaDetails(@t.TareaId)">
                        <i class="bi bi-eye"></i>
                    </a>
                    <a href="#" class="text-warning icon-btn" title="Editar" onclick="loadTareaEdit(@t.TareaId)">
                        <i class="bi bi-pencil-square"></i>
                    </a>
                    <button type="button" class="icon-btn text-danger" title="Eliminar" onclick="confirmTareaDelete(@t.TareaId)">
                        <i class="bi bi-trash-fill"></i>
                    </button>
                </div>

                <h5 class="card-title" style="color:#66ccff;font-weight:700;">
                    <i class="bi bi-hammer me-1"></i>Tarea #@t.TareaId
                </h5>

                <p class="card-text mb-1">
                    <i class="bi bi-upc-scan me-1 text-secondary"></i>
                    <strong>Vehículo:</strong> @(t.Vehiculo?.Placa ?? "—")
                </p>
                <p class="card-text mb-1">
                    <i class="bi bi-diagram-3 me-1 text-secondary"></i>
                    <strong>Sector:</strong> @(string.IsNullOrWhiteSpace(t.Sector) ? "—" : t.Sector)
                </p>
                <p class="card-text mb-1">
                    <i class="bi bi-file-text me-1 text-secondary"></i>
                    <strong>Descripción:</strong> @(string.IsNullOrWhiteSpace(t.Descripcion) ? "—" : t.Descripcion)
                </p>
                <p class="card-text mb-1">
                    <i class="bi bi-calendar3 me-1 text-secondary"></i>
                    <strong>Fecha:</strong> @(t.FechaRegistro?.ToString("dd/MM/yyyy") ?? "—")
                </p>

                <div class="d-flex justify-content-between align-items-center mt-2">
                    <span class="badge-pill @(t.Realizada ? "badge-done" : "badge-pending")">
                        @(t.Realizada ? "Realizada" : "Pendiente")
                    </span>

                    <!-- Toggle Realizada (conserva tus filtros) -->
                    <form asp-action="ToggleRealizada" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@t.TareaId" />
                        <input type="hidden" name="vehiculoId" value="@vehiculoIdFilter" />
                        <input type="hidden" name="realizadas" value="@(realizadas?.ToString().ToLower())" />
                        <input type="hidden" name="q" value="@q" />
                        <input type="hidden" name="sector" value="@sectorFilter" />
                        <button type="submit" class="btn btn-sm @(t.Realizada ? "btn-success" : "btn-warning")">
                            <i class="bi @(t.Realizada ? "bi-check2-circle" : "bi-hourglass-split") me-1"></i>
                            @(t.Realizada ? "Marcar pendiente" : "Marcar realizada")
                        </button>
                    </form>
                </div>
            </div>

            <!-- Modal Details (uno por item para carga simple, igual a Vehículos) -->
            <div class="modal fade" id="tareaDetails-@t.TareaId" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Detalles de la Tarea</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                        </div>
                        <div class="modal-body" id="tareaDetailsBody-@t.TareaId">
                            <p class="text-center">Cargando…</p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Toast de éxito -->
<div class="toast align-items-center text-bg-success border-0 position-fixed bottom-0 end-0 m-3" id="toastSuccess" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">¡Acción realizada con éxito!</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
    </div>
</div>

<!-- Modales comunes (únicos) -->
<div class="modal fade" id="tareaEdit" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Editar Tarea</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
            <div class="modal-body" id="tareaEditBody"><p class="text-center">Cargando…</p></div>
        </div>
    </div>
</div>

<div class="modal fade" id="tareaCreate" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Nueva Tarea</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
            <div class="modal-body" id="tareaCreateBody"><p class="text-center">Cargando…</p></div>
        </div>
    </div>
</div>

<div class="modal fade" id="tareaDelete" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Confirmar eliminación</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
            <div class="modal-body">
                <p>¿Estás seguro de que deseas eliminar esta tarea?</p>
                <form id="tareaDeleteForm" method="post">
                    <input type="hidden" name="id" id="tareaDeleteId" />
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button class="btn btn-danger" onclick="submitTareaDelete()">Eliminar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Búsqueda client-side (como Vehículos)
        document.getElementById('taskSearch').addEventListener('input', function () {
            const q = this.value.toLowerCase();
            document.querySelectorAll('#tareasGrid .task-card').forEach(function (card) {
                const txt = card.innerText.toLowerCase();
                card.style.display = txt.includes(q) ? '' : 'none';
            });
        });

        // Crear (si hay vehículo seleccionado en filtros, lo pasa como query)
        function loadTareaCreate() {
            const modal = new bootstrap.Modal(document.getElementById('tareaCreate'));
            const body = document.getElementById('tareaCreateBody');
            body.innerHTML = "<p class='text-center'>Cargando…</p>";
            modal.show();
            const vehSel = document.querySelector('select[name="vehiculoId"]');
            const veh = vehSel && vehSel.value ? `?vehiculoId=${encodeURIComponent(vehSel.value)}` : '';
            fetch(`/TareasVehiculo/Create${veh}`)
                .then(r => r.text())
                .then(html => { body.innerHTML = html; })
                .catch(() => { body.innerHTML = `<div class="alert alert-danger">Error al cargar el formulario</div>`; });
        }

        // Editar
        function loadTareaEdit(id) {
            const modal = new bootstrap.Modal(document.getElementById('tareaEdit'));
            const body = document.getElementById('tareaEditBody');
            body.innerHTML = "<p class='text-center'>Cargando…</p>";
            modal.show();

            fetch(`/TareasVehiculo/Edit/${id}`)
                .then(r => r.text())
                .then(html => { body.innerHTML = html; })
                .catch(() => { body.innerHTML = `<div class="alert alert-danger">Error al cargar el formulario</div>`; });
        }

        // Detalles
        function openTareaDetails(id) {
            const modalId = `tareaDetails-${id}`;
            const bodyId = `tareaDetailsBody-${id}`;
            const modal = new bootstrap.Modal(document.getElementById(modalId));
            const body = document.getElementById(bodyId);
            body.innerHTML = "<p class='text-center'>Cargando…</p>";
            modal.show();

            fetch(`/TareasVehiculo/Details/${id}`)
                .then(r => r.text())
                .then(html => { body.innerHTML = html; })
                .catch(() => { body.innerHTML = `<div class="alert alert-danger">Error al cargar detalles</div>`; });
        }

        // Eliminar
        function confirmTareaDelete(id) {
            const modal = new bootstrap.Modal(document.getElementById('tareaDelete'));
            document.getElementById('tareaDeleteId').value = id;
            document.getElementById('tareaDeleteForm').action = `/TareasVehiculo/Delete/${id}`;
            modal.show();
        }
        function submitTareaDelete() {
            document.getElementById('tareaDeleteForm').submit();
        }

        // Toast de éxito
        function showSuccessToast() {
            new bootstrap.Toast(document.getElementById('toastSuccess')).show();
        }
    </script>
}
