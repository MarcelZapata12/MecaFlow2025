@model IEnumerable<MecaFlow2025.Models.Factura>
@using System.Globalization
@using System.Text.Json
@{
    ViewData["Title"] = "Facturas";
    var cr = new CultureInfo("es-CR");
    var userRole = ViewBag.UserRole as string;
    var isClient = userRole == "Cliente";

    // KPIs
    var totalFacturas = Model?.Count() ?? 0;
    var montoTotal = Model?.Sum(f => f.MontoTotal) ?? 0m;
    var ultimaFecha = Model?.OrderByDescending(f => f.Fecha).FirstOrDefault()?.Fecha.ToString("dd/MM/yyyy") ?? "—";
    var metodoTop = Model?
        .Where(f => !string.IsNullOrWhiteSpace(f.Metodo))
        .GroupBy(f => f.Metodo!)
        .OrderByDescending(g => g.Count())
        .FirstOrDefault()?.Key ?? "—";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<style>
    body {
        background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
        color: #f8f9fa;
        animation: gradient 15s ease infinite;
        background-size: 400% 400%;
    }

    @@keyframes gradient {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
            box-shadow: 0 0 0 0 rgba(13,110,253,.4);
        }

        70% {
            transform: scale(1.05);
            box-shadow: 0 0 0 10px rgba(13,110,253,0);
        }

        100% {
            transform: scale(1);
            box-shadow: 0 0 0 0 rgba(13,110,253,0);
        }
    }

    .kpi-card {
        border-radius: 1rem;
        transition: transform .3s ease, box-shadow .3s ease;
    }

        .kpi-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,.3);
        }

    .factura-card {
        background-color: #1f1f1f;
        border: 1px solid #2c2c2c;
        color: white;
        border-radius: 1rem;
        transition: transform .3s ease, box-shadow .3s ease;
        margin-bottom: 1rem;
        position: relative;
        animation: fadeInUp .5s ease-in-out;
    }

        .factura-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,.3);
        }

    .facturas-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1rem;
    }

    .form-control:focus {
        background-color: #2c2c2c;
        color: #fff;
        border-color: #66afe9;
        box-shadow: 0 0 0 .2rem rgba(102,175,233,.25);
    }

    .icon-btn {
        background: none;
        border: none;
        padding: 0;
        font-size: 1.25rem;
        color: inherit;
    }

    .action-icons {
        position: absolute;
        top: .75rem;
        right: 1rem;
        display: flex;
        gap: .75rem;
        z-index: 2;
    }

    .btn-pulse {
        animation: pulse 2s infinite;
    }

    .client-info-banner {
        background: linear-gradient(135deg, #17a2b8, #138496);
        color: white;
        padding: 1rem;
        border-radius: .5rem;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .no-facturas-message {
        text-align: center;
        padding: 3rem;
        color: #adb5bd;
    }

        .no-facturas-message i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: .5;
        }

    /* === Estilo de modal oscuro similar a Reportes === */
    #modalFactura .modal-content {
        background-color: #111827 !important;
        color: #e5e7eb !important;
    }

    #modalFactura .modal-header {
        background-color: #0d6efd !important;
        color: #ffffff !important;
    }

    #modalFactura .btn-close {
        filter: invert(1);
    }

    #modalFactura label,
    #modalFactura .form-label,
    #modalFactura h2,
    #modalFactura h5,
    #modalFactura .modal-title,
    #modalFactura strong {
        color: #e5e7eb !important;
    }

    #modalFactura .form-control,
    #modalFactura textarea,
    #modalFactura input[type="date"],
    #modalFactura input[type="number"] {
        background-color: #0b1220 !important;
        color: #e5e7eb !important;
        border-color: #334155 !important;
    }

        #modalFactura .form-control::placeholder, #modalFactura textarea::placeholder {
            color: #94a3b8 !important;
        }

    #modalFactura .card {
        background-color: #0b1220 !important;
        color: #e5e7eb !important;
        border: 1px solid #334155 !important;
    }

        #modalFactura .card .card-body {
            background-color: transparent !important;
        }

    /* Footer con Cancelar a la izquierda y Guardar a la derecha (si el parcial lo usa) */
    #modalFactura .modal-footer {
        display: flex;
        justify-content: space-between;
    }
</style>

<div class="container py-4">

    @if (isClient)
    {
        <div class="client-info-banner">
            <h4><i class="bi bi-person-check me-2"></i>Mis Facturas</h4>
            <p class="mb-0">Aquí puedes ver la información de todas tus facturas y servicios realizados en nuestro taller.</p>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-white">
            <i class="bi bi-receipt me-2"></i>@(isClient ? "Mis Facturas" : "Facturas")
        </h2>
        <div class="d-flex align-items-center">
            <input id="facturaSearch" type="search"
                   class="form-control form-control-sm me-3 bg-dark text-white border-secondary"
                   placeholder="Buscar por @(isClient ? "fecha, vehículo o método de pago" : "cliente, vehículo o método de pago")…" />

            <!-- Exportar: igual que Reportes -->
            <a asp-controller="Facturas" asp-action="ExportToExcel" class="btn btn-outline-success me-2">
                <i class="bi bi-file-earmark-excel"></i> Excel
            </a>
            <a asp-controller="Facturas" asp-action="ExportToPdf" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-earmark-pdf"></i> PDF
            </a>

            @if (!isClient)
            {
                <a href="#" class="btn btn-success btn-pulse" onclick="loadFacturaCreate()">
                    <i class="bi bi-plus-circle me-1"></i>Nueva Factura
                </a>
            }
        </div>
    </div>

    @if (TempData["Ok"] is string ok && !string.IsNullOrWhiteSpace(ok))
    {
        <div class="alert alert-success">@ok</div>
    }
    @if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
    {
        <div class="alert alert-danger">@err</div>
    }

    <!-- KPIs al estilo Reportes -->
    <div class="row text-white mb-4">
        <div class="col-md-3">
            <div class="card bg-primary shadow kpi-card text-center p-3">
                <h5>Total Facturas</h5>
                <h3 class="fw-bold">@totalFacturas</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success shadow kpi-card text-center p-3">
                <h5>Monto Total</h5>
                <h3 class="fw-bold">@montoTotal.ToString("C", cr)</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning shadow kpi-card text-center p-3">
                <h5>Última Fecha</h5>
                <h3 class="fw-bold">@ultimaFecha</h3>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-dark shadow kpi-card text-center p-3">
                <h5>Método más usado</h5>
                <h3 class="fw-bold">@metodoTop</h3>
            </div>
        </div>
    </div>

    <!-- Gráfico estilo Reportes: total facturado por fecha -->
    <div class="card mb-4 shadow-sm">
        <div class="card-body bg-dark rounded">
            <canvas id="facturasChart" height="100"></canvas>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="no-facturas-message">
            <i class="bi bi-receipt"></i>
            <h4>@(isClient ? "No tienes facturas registradas" : "No hay facturas registradas")</h4>
            <p>@(isClient ? "Las facturas aparecerán aquí cuando se registren servicios para tus vehículos." : "Comienza agregando una nueva factura al sistema.")</p>
        </div>
    }
    else
    {
        <div id="facturasGrid" class="facturas-grid">
            @foreach (var item in Model)
            {
                <div class="factura-card card p-3">
                    <div class="action-icons">
                        <a href="#" class="text-info icon-btn" title="Detalles" onclick="openFacturaDetails(@item.FacturaId)">
                            <i class="bi bi-eye"></i>
                        </a>
                        @if (!isClient)
                        {
                            <a href="#" class="text-warning icon-btn" title="Editar" onclick="loadFacturaEdit(@item.FacturaId)">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <button type="button" class="icon-btn text-danger" title="Eliminar" onclick="confirmFacturaDelete(@item.FacturaId)">
                                <i class="bi bi-trash-fill"></i>
                            </button>
                        }
                    </div>

                    <h5 class="card-title" style="color:#66ccff;font-weight:700;">
                        <i class="bi bi-hash me-1"></i>Factura #@item.FacturaId
                    </h5>
                    <p class="card-text mb-1"><i class="bi bi-calendar3 me-1 text-secondary"></i><strong>Fecha:</strong> @item.Fecha.ToString("dd/MM/yyyy")</p>
                    @if (!isClient)
                    {
                        <p class="card-text mb-1"><i class="bi bi-person-fill me-1 text-secondary"></i><strong>Cliente:</strong> @item.Cliente?.Nombre</p>
                    }
                    <p class="card-text mb-1"><i class="bi bi-car-front-fill me-1 text-secondary"></i><strong>Vehículo:</strong> @item.Vehiculo?.Placa</p>
                    <p class="card-text mb-1"><i class="bi bi-credit-card me-1 text-secondary"></i><strong>Método:</strong> @(string.IsNullOrWhiteSpace(item.Metodo) ? "-" : item.Metodo)</p>
                    <p class="card-text small text-muted">
                        <i class="bi bi-currency-dollar me-1"></i>@item.MontoTotal.ToString("C", cr)
                    </p>
                </div>
            }
        </div>
    }
</div>

<!-- Toast de éxito -->
<div class="toast align-items-center text-bg-success border-0 position-fixed bottom-0 end-0 m-3" id="toastSuccess" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">¡Acción realizada con éxito!</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
    </div>
</div>

<!-- Modal único al estilo Reportes -->
<div class="modal fade" id="modalFactura" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content shadow">
            <div class="modal-header">
                <h5 class="modal-title" id="modalFacturaTitle">Gestión de Factura</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalFacturaBody">
                <div class="text-center text-muted">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                </div>
            </div>
        
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const isClient = @(isClient.ToString().ToLower());

        // ===== Buscar en cards (client-side)
        document.getElementById('facturaSearch').addEventListener('input', function () {
            const q = this.value.toLowerCase();
            document.querySelectorAll('#facturasGrid .factura-card').forEach(function (card) {
                const txt = card.innerText.toLowerCase();
                card.style.display = txt.includes(q) ? '' : 'none';
            });
        });

        // ===== Modal único (similar a Reportes)
        const modalEl = document.getElementById('modalFactura');
        const modal = new bootstrap.Modal(modalEl);
        const modalBody = document.getElementById('modalFacturaBody');
        const modalTitle = document.getElementById('modalFacturaTitle');

        function openFacturaModal(url, title) {
            modalTitle.textContent = title || 'Gestión de Factura';
            modalBody.innerHTML = "<div class='text-center p-3'><div class='spinner-border text-primary' role='status'></div></div>";
            modal.show();

            fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' }, credentials: 'same-origin' })
                .then(r => { if (!r.ok) throw new Error(`HTTP ${r.status} ${r.statusText}`); return r.text(); })
                .then(html => { modalBody.innerHTML = html; })
                .catch(err => {
                    modalBody.innerHTML = `<div class="alert alert-danger">No se pudo cargar el contenido (${err.message}).</div>`;
                });
        }

        // Delegación: submit AJAX de cualquier <form> dentro del modal
        modalBody.addEventListener('submit', async function (e) {
            const form = e.target;
            if (!(form instanceof HTMLFormElement)) return;
            e.preventDefault();

            try {
                const resp = await fetch(form.action, {
                    method: form.method || 'POST',
                    body: new FormData(form),
                    headers: { 'X-Requested-With': 'XMLHttpRequest' },
                    credentials: 'same-origin'
                });

                const ct = resp.headers.get('content-type') || '';
                if (resp.status === 204) { // No Content -> OK
                    modal.hide(); showSuccessToast(); location.reload(); return;
                }
                if (ct.includes('application/json')) {
                    const data = await resp.json();
                    if (data && (data.ok || data.success)) { modal.hide(); showSuccessToast(); location.reload(); return; }
                }

                // Si llega HTML, re-pintamos con validaciones
                modalBody.innerHTML = await resp.text();
            } catch (err) {
                modalBody.innerHTML = `<div class="alert alert-danger">Ocurrió un error al guardar. Revisa la consola.</div>`;
                console.error(err);
            }
        });

        // Botones públicos para usar el modal con parciales
        function loadFacturaCreate() { openFacturaModal(`/Facturas/Create`, "Nueva Factura"); }
        function loadFacturaEdit(id) { openFacturaModal(`/Facturas/Edit/${id}`, "Editar Factura"); }
        function confirmFacturaDelete(id) { openFacturaModal(`/Facturas/Delete/${id}`, "Eliminar Factura"); }
        function openFacturaDetails(id) { openFacturaModal(`/Facturas/Details/${id}`, "Detalles de la Factura"); }
        function showSuccessToast() { new bootstrap.Toast(document.getElementById('toastSuccess')).show(); }

        // Si habilitas el footer genérico comentado, esto envía el primer form del modal:
        function submitFirstFormInModal() {
            const f = modalBody.querySelector('form');
            if (f) f.requestSubmit();
        }

        // Exponer global
        window.loadFacturaCreate = loadFacturaCreate;
        window.loadFacturaEdit = loadFacturaEdit;
        window.confirmFacturaDelete = confirmFacturaDelete;
        window.openFacturaDetails = openFacturaDetails;
        window.submitFirstFormInModal = submitFirstFormInModal;

        // ===== Gráfico: total facturado por fecha (suma de MontoTotal)
        (function () {
            const ctx = document.getElementById('facturasChart');
            if (!ctx) return;

            const labels = @Html.Raw(JsonSerializer.Serialize(
            Model.GroupBy(f => f.Fecha.ToDateTime(TimeOnly.MinValue))
            .OrderBy(g => g.Key)
            .Select(g => g.Key.ToString("yyyy-MM-dd"))
            ));
            const data = @Html.Raw(JsonSerializer.Serialize(
        Model.GroupBy(f => f.Fecha.ToDateTime(TimeOnly.MinValue))
        .OrderBy(g => g.Key)
        .Select(g => g.Sum(x => x.MontoTotal))
        ));

            if (!labels.length || !data.length) return;

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels,
                    datasets: [{
                        label: 'Total facturado por fecha',
                        data,
                        backgroundColor: 'rgba(54, 162, 235, 0.6)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: { y: { beginAtZero: true } },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (c) {
                                    try { return new Intl.NumberFormat('es-CR', { style: 'currency', currency: 'CRC' }).format(c.parsed.y); }
                                    catch { return c.parsed.y; }
                                }
                            }
                        }
                    }
                }
            });
        })();
    </script>
}
