@model MecaFlow2025.Models.Factura
@{
    ViewData["Title"] = "Editar Factura";
}
<h1>Editar Factura #@Model.FacturaId</h1>

@if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
{
    <div class="alert alert-danger">@err</div>
}
@if (TempData["Ok"] is string ok && !string.IsNullOrWhiteSpace(ok))
{
    <div class="alert alert-success">@ok</div>
}

<form asp-action="Edit" asp-controller="Facturas" asp-route-id="@Model.FacturaId" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="FacturaId" />

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="row g-3">
        <div class="col-md-4">
            <label asp-for="ClienteId" class="form-label">Cliente</label>
            <select asp-for="ClienteId" class="form-select" asp-items="ViewBag.ClienteId"></select>
            <span asp-validation-for="ClienteId" class="text-danger"></span>
        </div>

        <div class="col-md-4">
            <label asp-for="VehiculoId" class="form-label">Vehículo</label>
            <select asp-for="VehiculoId" class="form-select" asp-items="ViewBag.VehiculoId" id="vehiculoSelect"></select>
            <span asp-validation-for="VehiculoId" class="text-danger"></span>
        </div>

        <div class="col-md-4">
            <label class="form-label">Fecha</label>
            <input class="form-control" value="@Model.Fecha.ToString("dd/MM/yyyy")" readonly />
        </div>

        <div class="col-md-4">
            <label asp-for="MontoTotal" class="form-label">Monto Total</label>
            <input asp-for="MontoTotal" class="form-control" type="number" step="0.01" min="0" />
            <span asp-validation-for="MontoTotal" class="text-danger"></span>
        </div>

        <!-- ===== Método de pago (reemplaza Observaciones) ===== -->
        <div class="col-md-4">
            <label asp-for="Metodo" class="form-label">Método de pago</label>
            <select asp-for="Metodo"
                    class="form-select"
                    asp-items="@(ViewData["Metodos"] as Microsoft.AspNetCore.Mvc.Rendering.SelectList)">
                <option value="">-- Seleccione --</option>
            </select>
            <span asp-validation-for="Metodo" class="text-danger"></span>
        </div>
        <!-- ==================================================== -->

        <div class="col-12">
            <h5 class="mt-3">Tareas realizadas al vehículo</h5>
            <div id="tareasContainer" class="card shadow-sm">
                <div class="p-3 text-muted">Seleccione un vehículo para cargar sus tareas…</div>
            </div>
        </div>

        <div class="col-12 mt-3">
            <button type="submit" class="btn btn-primary">Guardar</button>
            <a asp-action="Index" class="btn btn-secondary">Volver</a>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const tareasDiv = document.getElementById('tareasContainer');
        const sel = document.getElementById('vehiculoSelect');

        async function cargarTareas(vehiculoId){
            if(!vehiculoId){
                tareasDiv.innerHTML = '<div class="p-3 text-muted">Seleccione un vehículo para cargar sus tareas…</div>';
                return;
            }
            const resp = await fetch(`@Url.Action("TareasPorVehiculo", "Facturas")?vehiculoId=${vehiculoId}`);
            const html = await resp.text();
            tareasDiv.innerHTML = html;
        }

        sel.addEventListener('change', e => cargarTareas(e.target.value));
        if (sel.value) cargarTareas(sel.value);
    </script>
}
