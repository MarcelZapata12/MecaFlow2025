@model MecaFlow2025.Models.Factura
@{
    ViewData["Title"] = "Editar Factura";
    Layout = null;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<style>
    body {
        background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
        animation: gradient 15s ease infinite;
        background-size: 400% 400%;
        color: #f8f9fa;
    }

    @@keyframes gradient {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    .form-container {
        background-color: #1f1f1f;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
        animation: fadeInUp .6s ease-in-out;
        max-width: 800px;
        margin: 4rem auto;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    h1 {
        text-align: center;
        margin-bottom: 2rem;
        color: #fff;
        animation: fadeIn 1s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    .form-control, .form-select {
        background-color: #2c2c2c;
        color: #fff;
        border: 1px solid #444;
    }

        .form-control:focus, .form-select:focus {
            background-color: #2c2c2c;
            border-color: #66afe9;
            box-shadow: 0 0 0 .2rem rgba(102,175,233,.25);
        }

        /* Evita “cuadro blanco” en readonly/disabled, incluidos date inputs */
        .form-control[readonly],
        .form-control:disabled,
        .form-select:disabled {
            background-color: #2c2c2c !important;
            color: #fff !important;
            opacity: 1 !important;
            -webkit-text-fill-color: #fff;
        }

    input[type="date"].form-control,
    input[type="date"].form-control[readonly],
    input[type="date"].form-control:disabled {
        background-color: #2c2c2c !important;
        color: #fff !important;
    }

    .btn-primary {
        background-color: #0d6efd;
        border: none;
    }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
    }

    /* Tabla tareas */
    .tareas-table thead th {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: #343a40;
        color: #f8f9fa;
        border-color: #444;
    }

    .tareas-table td, .tareas-table th {
        white-space: nowrap;
        border-color: #444;
        color: #f8f9fa;
    }

    .tareas-table .desc {
        white-space: normal;
    }

    .tareas-table {
        background-color: #2a2a2a;
        color: #f8f9fa;
    }

        .tareas-table tbody tr {
            background-color: #2a2a2a;
        }

            .tareas-table tbody tr:hover {
                background-color: #333;
            }

    .card {
        background-color: #2a2a2a;
        border-color: #444;
    }

    label {
        font-weight: 600;
    }
</style>

<div class="form-container">
    <h1><i class="bi bi-pencil-square me-2"></i>Editar Factura #@Model.FacturaId</h1>

    @if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
    {
        <div class="alert alert-danger">@err</div>
    }
    @if (TempData["Ok"] is string ok && !string.IsNullOrWhiteSpace(ok))
    {
        <div class="alert alert-success">@ok</div>
    }

    <form asp-action="Edit" asp-controller="Facturas" asp-route-id="@Model.FacturaId" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="FacturaId" />
        <div asp-validation-summary="All" class="text-danger mb-3"></div>

        <div class="row g-3">
            <div class="col-md-6">
                <label asp-for="ClienteId" class="form-label">Cliente</label>
                <select asp-for="ClienteId" class="form-select" asp-items="ViewBag.ClienteId">
                    <option value="">-- Seleccione --</option>
                </select>
                <span asp-validation-for="ClienteId" class="text-danger"></span>
            </div>

            <div class="col-md-6">
                <label asp-for="VehiculoId" class="form-label">Vehículo</label>
                <select asp-for="VehiculoId" class="form-select" asp-items="ViewBag.VehiculoId" id="vehiculoSelect">
                    <option value="">-- Seleccione --</option>
                </select>
                <span asp-validation-for="VehiculoId" class="text-danger"></span>
            </div>

            <div class="col-md-4">
                <label class="form-label">Fecha</label>
                <!-- Visual -->
                <input class="form-control" value="@Model.Fecha.ToString("dd/MM/yyyy")" readonly />
                <!-- Valor que viaja al servidor (DateOnly => yyyy-MM-dd) -->
                <input type="hidden" name="Fecha" value="@Model.Fecha.ToString("yyyy-MM-dd")" />
            </div>

            <div class="col-md-4">
                <label asp-for="MontoTotal" class="form-label">Monto Total</label>
                <input asp-for="MontoTotal" class="form-control" type="number" step="0.01" min="0" />
                <span asp-validation-for="MontoTotal" class="text-danger"></span>
            </div>

            <div class="col-md-4">
                <label asp-for="Metodo" class="form-label">Método de pago</label>
                <select asp-for="Metodo" class="form-select"
                        asp-items="@(ViewData["Metodos"] as Microsoft.AspNetCore.Mvc.Rendering.SelectList)">
                    <option value="">-- Seleccione --</option>
                </select>
                <span asp-validation-for="Metodo" class="text-danger"></span>
            </div>

            <div class="col-12">
                <h5 class="mt-3">Tareas realizadas al vehículo</h5>
                <div id="tareasContainer" class="card shadow-sm">
                    <div class="p-3 text-muted">Seleccione un vehículo para cargar sus tareas…</div>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-between mt-4">
            <button type="submit" class="btn btn-primary px-4">
                <i class="bi bi-check-circle me-1"></i>Guardar
            </button>
            <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">
                <i class="bi bi-arrow-left me-1"></i>Volver
            </button>
        </div>
    </form>
</div>

<script>
    (() => {
        const tareasDiv = document.getElementById('tareasContainer');
        const sel       = document.getElementById('vehiculoSelect');
        const facturaId = document.querySelector('input[name="FacturaId"]')?.value;

        async function cargarTareas(vehiculoId) {
            if (!vehiculoId) {
                tareasDiv.innerHTML = '<div class="p-3 text-muted">Seleccione un vehículo para cargar sus tareas…</div>';
                return;
            }
            try {
                tareasDiv.innerHTML = '<div class="p-3 text-muted">Cargando tareas…</div>';

                const url = facturaId
                    ? `/Facturas/TareasPorVehiculo?vehiculoId=${encodeURIComponent(vehiculoId)}&facturaId=${encodeURIComponent(facturaId)}`
                    : `/Facturas/TareasPorVehiculo?vehiculoId=${encodeURIComponent(vehiculoId)}`;

                const resp = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
                tareasDiv.innerHTML = resp.ok
                    ? await resp.text()
                    : '<div class="p-3 text-danger">Error al cargar las tareas</div>';
            } catch (err) {
                console.error('Error cargando tareas:', err);
                tareasDiv.innerHTML = '<div class="p-3 text-danger">Error al cargar las tareas</div>';
            }
        }

        sel?.addEventListener('change', e => cargarTareas(e.target.value));

        // Si ya hay vehículo seleccionado al abrir el modal
        if (sel && sel.value) {
            cargarTareas(sel.value);
        }
    })();
</script>
