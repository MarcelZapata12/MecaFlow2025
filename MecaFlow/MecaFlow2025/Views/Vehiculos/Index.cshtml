@model IEnumerable<MecaFlow2025.Models.Vehiculo>

@{
    ViewData["Title"] = "Vehículos";
    var userRole = ViewBag.UserRole as string;
    var isClient = userRole == "Cliente";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<style>
    body {
        background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
        color: #f8f9fa;
        animation: gradient 15s ease infinite;
        background-size: 400% 400%;
    }

    @@keyframes gradient {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
            box-shadow: 0 0 0 0 rgba(13,110,253,.4);
        }

        70% {
            transform: scale(1.05);
            box-shadow: 0 0 0 10px rgba(13,110,253,0);
        }

        100% {
            transform: scale(1);
            box-shadow: 0 0 0 0 rgba(13,110,253,0);
        }
    }

    .vehicle-card {
        background-color: #1f1f1f;
        border: 1px solid #2c2c2c;
        color: white;
        border-radius: 1rem;
        transition: transform .3s ease, box-shadow .3s ease;
        margin-bottom: 1rem;
        position: relative;
        animation: fadeInUp .5s ease-in-out;
    }

        .vehicle-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,.3);
        }

    .vehicle-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1rem;
    }

    .form-control:focus {
        background-color: #2c2c2c;
        color: #fff;
        border-color: #66afe9;
        box-shadow: 0 0 0 .2rem rgba(102,175,233,.25);
    }

    .card-footer a, .card-footer button {
        transition: transform .2s ease;
    }

        .card-footer a:hover, .card-footer button:hover {
            transform: scale(1.2);
        }

    .icon-btn {
        background: none;
        border: none;
        padding: 0;
        font-size: 1.25rem;
        color: inherit;
    }

    .action-icons {
        position: absolute;
        top: .75rem;
        right: 1rem;
        display: flex;
        gap: .75rem;
        z-index: 2;
    }

        .action-icons form {
            display: inline;
        }

    .modal-content {
        background-color: #1f1f1f;
        color: white;
        animation: fadeIn .3s ease-in-out;
    }

    .btn-pulse {
        animation: pulse 2s infinite;
    }

    .client-info-banner {
        background: linear-gradient(135deg, #17a2b8, #138496);
        color: white;
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .no-vehicles-message {
        text-align: center;
        padding: 3rem;
        color: #adb5bd;
    }

        .no-vehicles-message i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }
</style>

@if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>@err
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
@if (TempData["Success"] is string ok && !string.IsNullOrWhiteSpace(ok))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i>@ok
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
<div class="container py-4">
    @if (isClient)
    {
        <div class="client-info-banner">
            <h4><i class="bi bi-person-check me-2"></i>Mis Vehículos</h4>
            <p class="mb-0">Aquí puedes ver la información de todos tus vehículos registrados en nuestro taller.</p>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-white">
            <i class="bi bi-truck-front me-2"></i>@(isClient ? "Mis Vehículos" : "Vehículos")
        </h2>
        <div class="d-flex align-items-center">
            <input id="vehiculoSearch" type="search"
                   class="form-control form-control-sm me-3 bg-dark text-white border-secondary"
                   placeholder="Buscar por placa, marca, modelo@(isClient ? "" : " o cliente")…" />

            @if (!isClient)
            {
                <a href="#" class="btn btn-primary btn-pulse" onclick="loadVehiculoCreate()">
                    <i class="bi bi-plus-circle me-1"></i>Nuevo Vehículo
                </a>
            }
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="no-vehicles-message">
            <i class="bi bi-car-front"></i>
            <h4>@(isClient ? "No tienes vehículos registrados" : "No hay vehículos registrados")</h4>
            <p>@(isClient ? "Contacta con nuestro taller para registrar tu vehículo." : "Comienza agregando un nuevo vehículo al sistema.")</p>
        </div>
    }
    else
    {
        <div id="vehiculosGrid" class="vehicle-grid">
            @foreach (var v in Model)
            {
                <div class="vehicle-card card p-3">
                    <div class="action-icons">
                        <a href="#" class="text-info icon-btn" title="Detalles" onclick="openVehiculoDetails(@v.VehiculoId)">
                            <i class="bi bi-eye"></i>
                        </a>
                        @if (!isClient)
                        {
                            <a href="#" class="text-warning icon-btn" title="Editar" onclick="loadVehiculoEdit(@v.VehiculoId)">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <button type="button" class="icon-btn text-danger" title="Eliminar" onclick="confirmVehiculoDelete(@v.VehiculoId)">
                                <i class="bi bi-trash-fill"></i>
                            </button>
                        }
                    </div>

                    <h5 class="card-title" style="color:#66ccff;font-weight:700;">
                        <i class="bi bi-upc-scan me-1"></i>@v.Placa
                    </h5>
                    <p class="card-text mb-1"><i class="bi bi-building me-1 text-secondary"></i><strong>Marca:</strong> @v.Marca?.Nombre</p>
                    <p class="card-text mb-1"><i class="bi bi-car-front-fill me-1 text-secondary"></i><strong>Modelo:</strong> @v.Modelo?.Nombre</p>
                    <p class="card-text mb-1"><i class="bi bi-calendar3 me-1 text-secondary"></i><strong>Año:</strong> @v.Anio</p>
                    @if (!isClient)
                    {
                        <p class="card-text mb-1"><i class="bi bi-person-fill me-1 text-secondary"></i><strong>Cliente:</strong> @v.Cliente?.Nombre</p>
                    }
                    <p class="card-text small text-muted">
                        <i class="bi bi-clock-history me-1"></i>
                        @(v.FechaRegistro.HasValue ? v.FechaRegistro.Value.ToString("dd/MM/yyyy") : "")
                    </p>
                </div>

                <!-- Modal Details (uno por item) -->
                <div class="modal fade" id="vehiculoDetails-@v.VehiculoId" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Detalles del Vehículo</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                            </div>
                            <div class="modal-body" id="vehiculoDetailsBody-@v.VehiculoId">
                                <p class="text-center">Cargando…</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Toast de éxito -->
<div class="toast align-items-center text-bg-success border-0 position-fixed bottom-0 end-0 m-3" id="toastSuccess" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">¡Acción realizada con éxito!</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
    </div>
</div>

@if (!isClient)
{
    <!-- Modales comunes (solo para admin/empleado) -->
    <div class="modal fade" id="vehiculoEdit" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header"><h5 class="modal-title">Editar Vehículo</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
                <div class="modal-body" id="vehiculoEditBody"><p class="text-center">Cargando…</p></div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="vehiculoCreate" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header"><h5 class="modal-title">Nuevo Vehículo</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
                <div class="modal-body" id="vehiculoCreateBody"><p class="text-center">Cargando…</p></div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="vehiculoDelete" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header"><h5 class="modal-title">Confirmar eliminación</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas eliminar este vehículo?</p>
                    <form id="vehiculoDeleteForm" method="post">
                        <input type="hidden" name="id" id="vehiculoDeleteId" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button class="btn btn-danger" onclick="submitVehiculoDelete()">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        const isClient = @(isClient.ToString().ToLower());

        // BÚSQUEDA CLIENT-SIDE
        document.getElementById('vehiculoSearch').addEventListener('input', function () {
            const q = this.value.toLowerCase();
            document.querySelectorAll('#vehiculosGrid .vehicle-card').forEach(function (card) {
                const txt = card.innerText.toLowerCase();
                card.style.display = txt.includes(q) ? '' : 'none';
            });
        });

        // DETALLES (carga en modal por ítem)
        function openVehiculoDetails(id) {
            const modalId = `vehiculoDetails-${id}`;
            const bodyId = `vehiculoDetailsBody-${id}`;
            const modal = new bootstrap.Modal(document.getElementById(modalId));
            const body = document.getElementById(bodyId);
            body.innerHTML = "<p class='text-center'>Cargando…</p>";
            modal.show();

            fetch(`/Vehiculos/Details/${id}`)
                .then(r => r.text())
                .then(html => { body.innerHTML = html; })
                .catch(() => { body.innerHTML = `<div class="alert alert-danger">Error al cargar detalles</div>`; });
        }

        // Funciones solo para admin/empleado
        if (!isClient) {
            // CREAR (carga en modal)
            function loadVehiculoCreate() {
                const modal = new bootstrap.Modal(document.getElementById('vehiculoCreate'));
                const body = document.getElementById('vehiculoCreateBody');
                body.innerHTML = "<p class='text-center'>Cargando…</p>";
                modal.show();

                fetch(`/Vehiculos/Create`)
                    .then(r => r.text())
                    .then(html => {
                        body.innerHTML = html;
                        initCreateDefaults();
                    })
                    .catch(() => { body.innerHTML = `<div class="alert alert-danger">Error al cargar el formulario</div>`; });
            }

            // EDITAR (carga en modal)
            function loadVehiculoEdit(id) {
                const modal = new bootstrap.Modal(document.getElementById('vehiculoEdit'));
                const body = document.getElementById('vehiculoEditBody');
                body.innerHTML = "<p class='text-center'>Cargando…</p>";
                modal.show();

                fetch(`/Vehiculos/Edit/${id}`)
                    .then(r => r.text())
                    .then(html => { body.innerHTML = html; })
                    .catch(() => { body.innerHTML = `<div class="alert alert-danger">Error al cargar el formulario</div>`; });
            }

            // =======================
            // ELIMINAR (AJAX + mensaje en modal)
            // =======================
            // =======================
            // ELIMINAR (AJAX -> AHORA SE VUELVE POST)
            // =======================
            function confirmVehiculoDelete(id) {
                const modal = new bootstrap.Modal(document.getElementById('vehiculoDelete'));
                document.getElementById('vehiculoDeleteId').value = id;
                document.getElementById('vehiculoDeleteForm').action = `/Vehiculos/Delete/${id}`;
                modal.show();
            }

            // Nueva función para el submit
            function submitVehiculoDelete() {
                document.getElementById('vehiculoDeleteForm').submit();
            }

            // ======================================================
            // DELEGACIÓN: Marca -> Modelo para formularios en modales
            // ======================================================
            document.addEventListener('change', async function (e) {
                const el = e.target;
                if (!(el instanceof HTMLElement)) return;
                if (el.id !== 'MarcaId') return;

                const contenedor = el.closest('.modal-form-container') || document;
                const modeloSel = contenedor.querySelector('#ModeloId');
                if (!modeloSel) return;

                modeloSel.innerHTML = '<option value="">-- Seleccione un modelo --</option>';

                const marcaId = el.value;
                if (!marcaId) return;

                try {
                    const res = await fetch(`/Vehiculos/GetModelosPorMarca?marcaId=${encodeURIComponent(marcaId)}`);
                    if (!res.ok) throw new Error('Respuesta no válida');
                    const data = await res.json();

                    for (const m of data) {
                        const opt = document.createElement('option');
                        opt.value = (m.modeloId ?? m.ModeloId ?? m.id);
                        opt.textContent = (m.nombre ?? m.Nombre ?? '—');
                        modeloSel.appendChild(opt);
                    }
                } catch {
                    const opt = document.createElement('option');
                    opt.value = '';
                    opt.textContent = 'Error al cargar modelos';
                    modeloSel.appendChild(opt);
                }
            });

            function initCreateDefaults() {
                const body = document.getElementById('vehiculoCreateBody');
                const modelo = body?.querySelector('#ModeloId');
                if (modelo) modelo.innerHTML = '<option value="">-- Seleccione un modelo --</option>';
            }

            // ======================================================
            // SUBMIT AJAX del Create (mantiene el modal abierto con errores)
            // ======================================================
            document.addEventListener('submit', function (e) {
                const form = e.target;
                const esCreateEnModal =
                    form.closest('#vehiculoCreateBody') &&
                    form.action.endsWith('/Vehiculos/Create');
                if (!esCreateEnModal) return;

                e.preventDefault();

                const body = document.getElementById('vehiculoCreateBody');

                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form),
                    headers: { 'X-Requested-With': 'XMLHttpRequest' } // para que el controller devuelva PartialView/JSON
                })
                .then(async (r) => {
                    const ct = r.headers.get('content-type') || '';

                    // Éxito: JSON { success: true }
                    if (ct.includes('application/json')) {
                        const data = await r.json();
                        if (data.success) {
                            const modalEl = document.getElementById('vehiculoCreate');
                            const modal = bootstrap.Modal.getInstance(modalEl);
                            modal?.hide();
                            showSuccessToast();
                            location.reload();
                            return;
                        }
                    }

                    // Errores de validación: llega HTML parcial -> reinyectar en el modal
                    const html = await r.text();
                    body.innerHTML = html;
                })
                .catch(() => {
                    body.innerHTML = `<div class="alert alert-danger">Error al guardar. Intenta de nuevo.</div>`;
                });
            });
        }

        // =======================
        // TOAST ÉXITO (disponible para todos)
        // =======================
        function showSuccessToast() {
            new bootstrap.Toast(document.getElementById('toastSuccess')).show();
        }

        // Hacer funciones globales para que funcionen desde onclick
        window.loadVehiculoCreate = loadVehiculoCreate;
        window.loadVehiculoEdit = loadVehiculoEdit;
        window.confirmVehiculoDelete = confirmVehiculoDelete;
        window.submitVehiculoDelete = submitVehiculoDelete;
        window.openVehiculoDetails = openVehiculoDetails;
    </script>
}